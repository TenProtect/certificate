{"version":3,"file":"city-selector.js","sources":["city-selector.vue","cGFnZXMvY2l0eS1zZWxlY3Rvci9jaXR5LXNlbGVjdG9yLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"city-selector-page\">\r\n        <!-- 自定义导航栏 -->\r\n        <view class=\"nav-bar\" :style=\"{ paddingTop: statusBarHeight + 30 + 'px' }\">\r\n            <text class=\"nav-title\"></text>\r\n            <view class=\"nav-placeholder\"></view>\r\n        </view>\r\n\r\n        <!-- 搜索框 -->\r\n        <view class=\"search-container\">\r\n            <view class=\"search-box\">\r\n                <view class=\"search-icon\">\r\n                    <view class=\"search-icon-svg\">\r\n                        <view class=\"search-circle\"></view>\r\n                        <view class=\"search-handle\"></view>\r\n                    </view>\r\n                </view>\r\n                <input class=\"search-input\" placeholder=\"输入城市\" v-model=\"searchKeyword\" @input=\"onSearchInput\"\r\n                    :focus=\"searchFocus\" />\r\n                <view v-if=\"searchKeyword\" class=\"clear-btn\" @tap=\"clearSearch\">\r\n                    <text class=\"clear-icon\">×</text>\r\n                </view>\r\n            </view>\r\n        </view>\r\n\r\n        <!-- 热门城市 -->\r\n        <view v-if=\"!searchKeyword\" class=\"hot-cities\">\r\n            <text class=\"section-title\">热门城市</text>\r\n            <view class=\"hot-city-grid\">\r\n                <view v-for=\"city in hotCities\" :key=\"city.code\" class=\"hot-city-item\" @tap=\"selectCity(city)\">\r\n                    <text class=\"hot-city-name\">{{ city.name.replace('市', '') }}</text>\r\n                </view>\r\n            </view>\r\n        </view>\r\n\r\n        <!-- 城市列表容器 -->\r\n        <view class=\"city-list-container\">\r\n            <!-- 搜索结果 -->\r\n            <view v-if=\"searchKeyword\" class=\"search-results\">\r\n                <view v-if=\"searchResults.length === 0\" class=\"no-results\">\r\n                    <text class=\"no-results-text\">未找到相关城市</text>\r\n                </view>\r\n                <view v-else class=\"search-result-list\">\r\n                    <view v-for=\"city in searchResults\" :key=\"city.code\" class=\"city-item search-result-item\"\r\n                        @tap=\"selectCity(city)\">\r\n                        <text class=\"city-name\">{{ city.name }}</text>\r\n                    </view>\r\n                </view>\r\n            </view>\r\n\r\n            <!-- 字母分组城市列表 -->\r\n            <scroll-view v-else class=\"city-list\" scroll-y :scroll-into-view=\"scrollIntoView\"\r\n                :scroll-with-animation=\"false\" @scroll=\"onScroll\">\r\n                <view v-for=\"letter in alphabetList\" :key=\"letter\" :id=\"`letter-${letter}`\" class=\"letter-section\">\r\n                    <view class=\"letter-header\">\r\n                        <text class=\"letter-title\">{{ letter }}</text>\r\n                    </view>\r\n                    <view class=\"city-group\">\r\n                        <view v-for=\"city in groupedCities[letter]\" :key=\"city.code\" class=\"city-item\"\r\n                            @tap=\"selectCity(city)\">\r\n                            <text class=\"city-name\">{{ city.name }}</text>\r\n                        </view>\r\n                    </view>\r\n                </view>\r\n            </scroll-view>\r\n\r\n            <!-- 字母索引条 -->\r\n            <view v-if=\"!searchKeyword\" class=\"alphabet-index\" @touchstart=\"onIndexTouchStart\"\r\n                @touchmove=\"onIndexTouchMove\" @touchend=\"onIndexTouchEnd\">\r\n                <view v-for=\"letter in alphabetList\" :key=\"letter\" :data-letter=\"letter\" class=\"index-letter\"\r\n                    :class=\"{ active: currentLetter === letter }\" @tap=\"onLetterTap(letter)\">\r\n                    <text class=\"index-letter-text\">{{ letter }}</text>\r\n                </view>\r\n            </view>\r\n\r\n            <!-- 字母提示浮层 -->\r\n            <view v-if=\"showLetterTip && !searchKeyword\" class=\"letter-tip\">\r\n                <text class=\"letter-tip-text\">{{ currentLetter }}</text>\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\nimport { citiesData } from '@/utils/cities-data.js'\r\n\r\nexport default {\r\n    name: 'CitySelector',\r\n    data() {\r\n        return {\r\n            searchKeyword: '',\r\n            searchFocus: false,\r\n            currentCity: '重庆',\r\n            cities: [],\r\n            groupedCities: {},\r\n            alphabetList: [],\r\n            hotCities: [],\r\n            searchResults: [],\r\n            scrollIntoView: '',\r\n            currentLetter: '',\r\n            showLetterTip: false,\r\n            indexTouching: false,\r\n            statusBarHeight: 44, // 默认状态栏高度\r\n            headerHeight: 44     // 默认导航栏高度\r\n        }\r\n    },\r\n    async onLoad(options) {\r\n        // 获取传入的当前城市\r\n        if (options.city) {\r\n            this.currentCity = decodeURIComponent(options.city)\r\n        }\r\n\r\n        // 获取系统信息，适配刘海屏\r\n        this.getSystemInfo()\r\n\r\n        await this.loadCities()\r\n        this.setupHotCities()\r\n        this.groupCitiesByLetter()\r\n    },\r\n    methods: {\r\n        async loadCities() {\r\n            // 使用导入的城市数据\r\n            this.cities = citiesData || []\r\n            console.log('加载城市数据成功，共', this.cities.length, '个城市')\r\n        },\r\n\r\n        setupHotCities() {\r\n            // 设置热门城市（可以根据实际需求调整）\r\n            const hotCityCodes = ['1101', '3101', '4403', '4401', '3301', '3201', '5001', '5101']\r\n            this.hotCities = this.cities.filter(city => hotCityCodes.includes(city.code))\r\n        },\r\n\r\n        groupCitiesByLetter() {\r\n            const grouped = {}\r\n            const alphabet = []\r\n\r\n            // 按拼音首字母分组\r\n            this.cities.forEach(city => {\r\n                const firstChar = this.getFirstLetter(city.name)\r\n                if (!grouped[firstChar]) {\r\n                    grouped[firstChar] = []\r\n                    if (!alphabet.includes(firstChar)) {\r\n                        alphabet.push(firstChar)\r\n                    }\r\n                }\r\n                grouped[firstChar].push(city)\r\n            })\r\n\r\n            // 排序字母列表\r\n            alphabet.sort()\r\n\r\n            // 按每组内的城市名称排序\r\n            Object.keys(grouped).forEach(letter => {\r\n                grouped[letter].sort((a, b) => a.name.localeCompare(b.name, 'zh-CN'))\r\n            })\r\n\r\n            this.groupedCities = grouped\r\n            this.alphabetList = alphabet\r\n\r\n            console.log('城市分组完成:', Object.keys(grouped).length, '个字母组')\r\n        },\r\n\r\n        getFirstLetter(cityName) {\r\n            // 更完整的拼音首字母映射\r\n            const letterMap = {\r\n                // A\r\n                '安': 'A', '阿': 'A', '鞍': 'A',\r\n                // B\r\n                '保': 'B', '包': 'B', '北': 'B', '博': 'B', '宝': 'B', '巴': 'B', '本': 'B', '毕': 'B', '滨': 'B', '白': 'B', '百': 'B', '蚌': 'B',\r\n                // C\r\n                '崇': 'C', '常': 'C', '成': 'C', '承': 'C', '昌': 'C', '朝': 'C', '楚': 'C', '池': 'C', '沧': 'C', '滁': 'C', '潮': 'C', '赤': 'C', '郴': 'C', '重': 'C', '长': 'C',\r\n                // D\r\n                '东': 'D', '丹': 'D', '大': 'D', '定': 'D', '德': 'D', '达': 'D', '迪': 'D',\r\n                // E\r\n                '恩': 'E', '鄂': 'E',\r\n                // F\r\n                '佛': 'F', '抚': 'F', '福': 'F', '阜': 'F', '防': 'F',\r\n                // G\r\n                '固': 'G', '广': 'G', '果': 'G', '桂': 'G', '甘': 'G', '贵': 'G', '赣': 'G',\r\n                // H\r\n                '合': 'H', '呼': 'H', '和': 'H', '哈': 'H', '怀': 'H', '惠': 'H', '杭': 'H', '汉': 'H', '河': 'H', '海': 'H', '淮': 'H', '湖': 'H', '红': 'H', '菏': 'H', '葫': 'H', '衡': 'H', '贺': 'H', '邯': 'H', '鹤': 'H', '黄': 'H', '黑': 'H',\r\n                // J\r\n                '九': 'J', '佳': 'J', '吉': 'J', '嘉': 'J', '揭': 'J', '晋': 'J', '景': 'J', '江': 'J', '济': 'J', '焦': 'J', '荆': 'J', '酒': 'J', '金': 'J', '锦': 'J', '鸡': 'J',\r\n                // K\r\n                '克': 'K', '喀': 'K', '开': 'K', '昆': 'K',\r\n                // L\r\n                '临': 'L', '丽': 'L', '乐': 'L', '六': 'L', '兰': 'L', '凉': 'L', '吕': 'L', '娄': 'L', '廊': 'L', '拉': 'L', '来': 'L', '林': 'L', '柳': 'L', '泸': 'L', '洛': 'L', '漯': 'L', '聊': 'L', '辽': 'L', '连': 'L', '陇': 'L', '龙': 'L',\r\n                // M\r\n                '梅': 'M', '牡': 'M', '眉': 'M', '绵': 'M', '茂': 'M', '马': 'M',\r\n                // N\r\n                '内': 'N', '南': 'N', '宁': 'N', '怒': 'N', '那': 'N',\r\n                // P\r\n                '平': 'P', '攀': 'P', '普': 'P', '濮': 'P', '盘': 'P', '莆': 'P', '萍': 'P',\r\n                // Q\r\n                '七': 'Q', '庆': 'Q', '曲': 'Q', '泉': 'Q', '清': 'Q', '秦': 'Q', '衢': 'Q', '钦': 'Q', '青': 'Q', '黔': 'Q', '齐': 'Q',\r\n                // R\r\n                '日': 'R',\r\n                // S\r\n                '三': 'S', '上': 'S', '十': 'S', '双': 'S', '商': 'S', '四': 'S', '宿': 'S', '山': 'S', '朔': 'S', '松': 'S', '汕': 'S', '沈': 'S', '深': 'S', '石': 'S', '绍': 'S', '绥': 'S', '苏': 'S', '遂': 'S', '邵': 'S', '随': 'S', '韶': 'S',\r\n                // T\r\n                '台': 'T', '吐': 'T', '唐': 'T', '塔': 'T', '天': 'T', '太': 'T', '泰': 'T', '通': 'T', '铁': 'T', '铜': 'T',\r\n                // W\r\n                '乌': 'W', '吴': 'W', '威': 'W', '文': 'W', '无': 'W', '梧': 'W', '武': 'W', '温': 'W', '渭': 'W', '潍': 'W', '芜': 'W',\r\n                // X\r\n                '信': 'X', '兴': 'X', '厦': 'X', '县': 'X', '咸': 'X', '孝': 'X', '宣': 'X', '徐': 'X', '忻': 'X', '新': 'X', '湘': 'X', '襄': 'X', '西': 'X', '许': 'X', '邢': 'X', '锡': 'X',\r\n                // Y\r\n                '云': 'Y', '伊': 'Y', '宜': 'Y', '岳': 'Y', '延': 'Y', '扬': 'Y', '榆': 'Y', '永': 'Y', '烟': 'Y', '玉': 'Y', '益': 'Y', '盐': 'Y', '营': 'Y', '运': 'Y', '银': 'Y', '阳': 'Y', '雅': 'Y', '鹰': 'Y',\r\n                // Z\r\n                '中': 'Z', '亳': 'Z', '儋': 'Z', '周': 'Z', '张': 'Z', '昭': 'Z', '枣': 'Z', '株': 'Z', '淄': 'Z', '湛': 'Z', '漳': 'Z', '珠': 'Z', '肇': 'Z', '自': 'Z', '舟': 'Z', '资': 'Z', '遵': 'Z', '郑': 'Z', '镇': 'Z', '驻': 'Z',\r\n            }\r\n            const firstChar = cityName.charAt(0)\r\n            return letterMap[firstChar] || '#'\r\n        },\r\n\r\n        onSearchInput() {\r\n            if (this.searchKeyword.trim()) {\r\n                this.searchResults = this.cities.filter(city =>\r\n                    city.name.includes(this.searchKeyword.trim())\r\n                )\r\n            } else {\r\n                this.searchResults = []\r\n            }\r\n        },\r\n\r\n        clearSearch() {\r\n            this.searchKeyword = ''\r\n            this.searchResults = []\r\n        },\r\n\r\n        selectCity(city) {\r\n            console.log('选择城市:', city.name)\r\n\r\n            // 通过事件通信或页面参数返回选中的城市\r\n            const pages = getCurrentPages()\r\n            const prevPage = pages[pages.length - 2]\r\n\r\n            if (prevPage) {\r\n                // 如果有回调方法，调用回调\r\n                if (prevPage.$vm && typeof prevPage.$vm.onCitySelected === 'function') {\r\n                    prevPage.$vm.onCitySelected(city)\r\n                }\r\n                // 或者通过全局事件\r\n                uni.$emit('citySelected', city)\r\n            }\r\n\r\n            // 返回上一页\r\n            uni.navigateBack()\r\n        },\r\n\r\n        goBack() {\r\n            uni.navigateBack()\r\n        },\r\n\r\n        // 字母索引相关方法\r\n        onLetterTap(letter) {\r\n            this.currentLetter = letter\r\n            // 先清空，然后立即设置，减少动画时间\r\n            this.scrollIntoView = ''\r\n            this.$nextTick(() => {\r\n                this.scrollIntoView = `letter-${letter}`\r\n            })\r\n            this.showLetterTip = true\r\n            setTimeout(() => {\r\n                this.showLetterTip = false\r\n            }, 300) // 减少提示显示时间\r\n        },\r\n\r\n        onIndexTouchStart(e) {\r\n            this.indexTouching = true\r\n            this.showLetterTip = true\r\n            this.handleIndexTouch(e)\r\n        },\r\n\r\n        onIndexTouchMove(e) {\r\n            if (this.indexTouching) {\r\n                this.handleIndexTouch(e)\r\n            }\r\n        },\r\n\r\n        onIndexTouchEnd(e) {\r\n            this.indexTouching = false\r\n            setTimeout(() => {\r\n                this.showLetterTip = false\r\n            }, 300) // 减少提示显示时间\r\n        },\r\n\r\n        handleIndexTouch(e) {\r\n            const touch = e.touches[0] || e.changedTouches[0]\r\n\r\n            if (!touch) return\r\n\r\n            // 获取索引条的位置信息\r\n            uni.createSelectorQuery().in(this).select('.alphabet-index').boundingClientRect((rect) => {\r\n                if (rect) {\r\n                    // 使用clientY而不是pageY，更准确\r\n                    const relativeY = touch.clientY - rect.top\r\n                    const letterHeight = rect.height / this.alphabetList.length\r\n                    const index = Math.floor(relativeY / letterHeight)\r\n\r\n                    if (index >= 0 && index < this.alphabetList.length) {\r\n                        const letter = this.alphabetList[index]\r\n                        this.currentLetter = letter\r\n\r\n                        // 先清空，然后立即设置，实现快速滚动\r\n                        this.scrollIntoView = ''\r\n                        this.$nextTick(() => {\r\n                            this.scrollIntoView = `letter-${letter}`\r\n                        })\r\n                    }\r\n                }\r\n            }).exec()\r\n        },\r\n\r\n        onScroll(e) {\r\n            // 简化滚动处理，只在非拖拽状态下更新当前字母\r\n            if (!this.indexTouching) {\r\n                // 可以在这里添加简单的当前字母更新逻辑\r\n            }\r\n        },\r\n\r\n        // 获取系统信息，适配刘海屏\r\n        getSystemInfo() {\r\n            try {\r\n                const systemInfo = uni.getSystemInfoSync()\r\n                // 支付宝小程序获取状态栏高度\r\n                this.statusBarHeight = systemInfo.statusBarHeight || 44\r\n                \r\n                // 根据平台和机型设置不同的导航栏高度\r\n                if (systemInfo.platform === 'ios') {\r\n                    // iPhone刘海屏适配\r\n                    if (systemInfo.statusBarHeight >= 44) {\r\n                        this.headerHeight = 44  // iPhone X及以上\r\n                    } else {\r\n                        this.headerHeight = 44  // iPhone 8及以下\r\n                    }\r\n                } else if (systemInfo.platform === 'android') {\r\n                    // Android刘海屏适配\r\n                    this.headerHeight = 48\r\n                } else {\r\n                    this.headerHeight = 44\r\n                }\r\n                \r\n                // 额外的安全区域处理\r\n                const safeArea = systemInfo.safeArea || {}\r\n                const safeAreaTop = safeArea.top || this.statusBarHeight\r\n                \r\n                // 使用更安全的顶部距离\r\n                this.statusBarHeight = Math.max(this.statusBarHeight, safeAreaTop)\r\n                \r\n                console.log('城市选择页系统信息:', {\r\n                    platform: systemInfo.platform,\r\n                    statusBarHeight: this.statusBarHeight,\r\n                    headerHeight: this.headerHeight,\r\n                    model: systemInfo.model,\r\n                    safeArea: safeArea\r\n                })\r\n            } catch (e) {\r\n                console.log('获取系统信息失败，使用默认值:', e)\r\n                // 降级方案：根据用户代理判断\r\n                const userAgent = navigator.userAgent || ''\r\n                if (userAgent.includes('iPhone')) {\r\n                    this.statusBarHeight = 44\r\n                    this.headerHeight = 44\r\n                } else {\r\n                    this.statusBarHeight = 44\r\n                    this.headerHeight = 48\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局CSS变量定义 */\r\n:root {\r\n  --status-bar-height: 44px;\r\n}\r\n\r\n/* 支付宝小程序环境变量支持 */\r\n@supports (top: env(safe-area-inset-top)) {\r\n  :root {\r\n    --status-bar-height: env(safe-area-inset-top);\r\n  }\r\n}\r\n\r\n/* 微信小程序环境变量支持 */\r\n@supports (top: constant(safe-area-inset-top)) {\r\n  :root {\r\n    --status-bar-height: constant(safe-area-inset-top);\r\n  }\r\n}\r\n\r\n.city-selector-page {\r\n    height: 100vh;\r\n    background-color: #f5f6f8;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n}\r\n\r\n/* 导航栏 */\r\n.nav-bar {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0 20rpx 30rpx;\r\n    background-color: white;\r\n    position: relative;\r\n    z-index: 100;\r\n    /* CSS环境变量回退方案 */\r\n    padding-top: var(--status-bar-height, 44px);\r\n}\r\n\r\n.nav-title {\r\n    font-size: 36rpx;\r\n    font-weight: bold;\r\n    color: #333;\r\n}\r\n\r\n.nav-placeholder {\r\n    width: 80rpx;\r\n}\r\n\r\n/* 针对特殊机型的适配 */\r\n@media screen and (device-width: 414px) and (device-height: 896px) {\r\n  /* iPhone XR, iPhone 11 */\r\n  .nav-bar {\r\n    padding-top: 44px;\r\n  }\r\n}\r\n\r\n@media screen and (device-width: 375px) and (device-height: 812px) {\r\n  /* iPhone X, iPhone XS, iPhone 11 Pro */\r\n  .nav-bar {\r\n    padding-top: 44px;\r\n  }\r\n}\r\n\r\n@media screen and (device-width: 414px) and (device-height: 896px) {\r\n  /* iPhone XS Max, iPhone 11 Pro Max */\r\n  .nav-bar {\r\n    padding-top: 44px;\r\n  }\r\n}\r\n\r\n/* 搜索框 */\r\n.search-container {\r\n    background-color: white;\r\n    padding: 20rpx;\r\n    border-bottom: 1rpx solid #e9ecef;\r\n}\r\n\r\n.search-box {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #f8f9fa;\r\n    border: 1rpx solid #e9ecef;\r\n    border-radius: 25rpx;\r\n    padding: 0 20rpx;\r\n}\r\n\r\n.search-icon {\r\n    margin-right: 15rpx;\r\n}\r\n\r\n.search-icon-svg {\r\n    position: relative;\r\n    width: 32rpx;\r\n    height: 32rpx;\r\n}\r\n\r\n.search-circle {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n    border: 3rpx solid #999;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n.search-handle {\r\n    width: 12rpx;\r\n    height: 3rpx;\r\n    background-color: #999;\r\n    border-radius: 2rpx;\r\n    position: absolute;\r\n    bottom: 7rpx;\r\n    right: -5rpx;\r\n    transform: rotate(40deg);\r\n    transform-origin: left center;\r\n}\r\n\r\n.search-input {\r\n    flex: 1;\r\n    padding: 25rpx 0;\r\n    font-size: 28rpx;\r\n    border: none;\r\n    background: transparent;\r\n}\r\n\r\n.clear-btn {\r\n    width: 40rpx;\r\n    height: 40rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n}\r\n\r\n.clear-icon {\r\n    font-size: 32rpx;\r\n    color: #999;\r\n}\r\n\r\n/* 热门城市 */\r\n.hot-cities {\r\n    background-color: white;\r\n    padding: 30rpx 20rpx;\r\n    border-bottom: 1rpx solid #e9ecef;\r\n}\r\n\r\n.section-title {\r\n    font-size: 28rpx;\r\n    color: #666;\r\n    margin-bottom: 20rpx;\r\n    display: block;\r\n}\r\n\r\n.hot-city-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 20rpx;\r\n}\r\n\r\n.hot-city-item {\r\n    padding: 20rpx;\r\n    text-align: center;\r\n    background: #f8f9fa;\r\n    border-radius: 12rpx;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.hot-city-item:active {\r\n    background: #e9ecef;\r\n    transform: scale(0.98);\r\n}\r\n\r\n.hot-city-name {\r\n    font-size: 28rpx;\r\n    color: #333;\r\n}\r\n\r\n/* 城市列表容器 */\r\n.city-list-container {\r\n    flex: 1;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n/* 搜索结果 */\r\n.search-results {\r\n    height: 100%;\r\n    background-color: white;\r\n}\r\n\r\n.no-results {\r\n    padding: 100rpx 20rpx;\r\n    text-align: center;\r\n}\r\n\r\n.no-results-text {\r\n    font-size: 28rpx;\r\n    color: #999;\r\n}\r\n\r\n.search-result-list {\r\n    padding: 0 20rpx;\r\n}\r\n\r\n.search-result-item {\r\n    border-bottom: 1rpx solid #f0f0f0;\r\n}\r\n\r\n/* 城市列表 */\r\n.city-list {\r\n    height: 100%;\r\n    background-color: white;\r\n}\r\n\r\n.letter-section {\r\n    margin-bottom: 20rpx;\r\n}\r\n\r\n.letter-header {\r\n    background: #f8f9fa;\r\n    padding: 15rpx 20rpx;\r\n    border-bottom: 1rpx solid #e9ecef;\r\n}\r\n\r\n.letter-title {\r\n    font-size: 24rpx;\r\n    color: #666;\r\n    font-weight: bold;\r\n}\r\n\r\n.city-group {\r\n    background-color: white;\r\n}\r\n\r\n.city-item {\r\n    padding: 30rpx 20rpx;\r\n    border-bottom: 1rpx solid #f0f0f0;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s ease;\r\n}\r\n\r\n.city-item:active {\r\n    background-color: #f8f9fa;\r\n}\r\n\r\n.city-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.city-name {\r\n    font-size: 32rpx;\r\n    color: #333;\r\n}\r\n\r\n/* 字母索引条 */\r\n.alphabet-index {\r\n    position: fixed;\r\n    right: 10rpx;\r\n    top: calc(100vh - 480rpx);\r\n    transform: translateY(-50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    z-index: 999;\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 20rpx;\r\n    padding: 10rpx 5rpx;\r\n}\r\n\r\n.index-letter {\r\n    padding: 5rpx;\r\n    width: 30rpx;\r\n    height: 30rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.index-letter.active {\r\n    background-color: #565DF4;\r\n}\r\n\r\n.index-letter-text {\r\n    font-size: 20rpx;\r\n    color: #666;\r\n    font-weight: bold;\r\n}\r\n\r\n.index-letter.active .index-letter-text {\r\n    color: white;\r\n}\r\n\r\n/* 字母提示浮层 */\r\n.letter-tip {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 120rpx;\r\n    height: 120rpx;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    border-radius: 12rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n}\r\n\r\n.letter-tip-text {\r\n    font-size: 48rpx;\r\n    color: white;\r\n    font-weight: bold;\r\n}\r\n</style>\r\n","import MiniProgramPage from 'D:/workspace/ClientWorkArea/证照小程序/miniapp/zfb-uniapp/pages/city-selector/city-selector.vue'\nmy.createPage(MiniProgramPage)"],"names":["citiesData","uni"],"mappings":"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"}