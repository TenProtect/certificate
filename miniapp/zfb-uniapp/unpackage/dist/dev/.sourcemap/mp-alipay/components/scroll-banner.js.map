{"version":3,"file":"scroll-banner.js","sources":["scroll-banner.vue","RDovd29ya3NwYWNlL0NsaWVudFdvcmtBcmVhL-ivgeeFp-Wwj-eoi-W6jy9taW5pYXBwL3pmYi11bmlhcHAvY29tcG9uZW50cy9zY3JvbGwtYmFubmVyLnZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"scroll-banner-container\" :style=\"containerStyle\">\r\n    <view \r\n      class=\"scroll-banner-wrapper\"\r\n      :style=\"wrapperStyle\"\r\n      @touchstart=\"handleTouchStart\"\r\n      @touchmove=\"handleTouchMove\"\r\n      @touchend=\"handleTouchEnd\"\r\n    >\r\n      <view \r\n        class=\"scroll-banner-track\"\r\n        :style=\"trackStyle\"\r\n        ref=\"track\"\r\n      >\r\n        <view \r\n          v-for=\"(item, index) in imageList\" \r\n          :key=\"index\"\r\n          class=\"scroll-banner-item\"\r\n          :style=\"itemStyle\"\r\n          @click=\"onItemClick(item, index)\"\r\n        >\r\n          <!-- 使用背景图实现顶部对齐裁剪 -->\r\n          <view \r\n            :style=\"imageBgStyle(item, index)\"\r\n          />\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 指示器 -->\r\n    <view v-if=\"showIndicators && imageList.length > 1\" class=\"scroll-banner-indicators\">\r\n      <view \r\n        v-for=\"(item, index) in imageList\"\r\n        :key=\"`indicator-${index}`\"\r\n        class=\"indicator-dot\"\r\n        :class=\"{ active: currentIndex === index }\"\r\n        @click=\"goToSlide(index)\"\r\n      ></view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ScrollBanner',\r\n  props: {\r\n    // 图片列表\r\n    images: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 滚动方向：horizontal(水平) | vertical(垂直)\r\n    direction: {\r\n      type: String,\r\n      default: 'horizontal',\r\n      validator: value => ['horizontal', 'vertical'].includes(value)\r\n    },\r\n    // 自动播放间隔时间（毫秒）\r\n    interval: {\r\n      type: Number,\r\n      default: 3000\r\n    },\r\n    // 切换动画时长（毫秒）\r\n    duration: {\r\n      type: Number,\r\n      default: 300\r\n    },\r\n    // 容器高度\r\n    height: {\r\n      type: [String, Number],\r\n      default: '200rpx'\r\n    },\r\n    // 容器宽度\r\n    width: {\r\n      type: [String, Number],\r\n      default: '100%'\r\n    },\r\n    // 图片宽度（水平滚动时）\r\n    itemWidth: {\r\n      type: [String, Number],\r\n      default: '100%'\r\n    },\r\n    // 图片高度（垂直滚动时）\r\n    itemHeight: {\r\n      type: [String, Number],\r\n      default: '100%'\r\n    },\r\n    // 是否自动播放\r\n    autoPlay: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否可以拖拽\r\n    draggable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否显示指示器\r\n    showIndicators: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否循环播放\r\n    loop: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 图片垂直对齐方式：top | center | bottom\r\n    imageAlign: {\r\n      type: String,\r\n      default: 'top',\r\n      validator: v => ['top', 'center', 'bottom'].includes(v)\r\n    },\r\n    // 图片向上偏移量（数值自动按 rpx 处理，也可直接传入如 '20px'、'10%'）\r\n    imageOffsetY: {\r\n      type: [Number, String],\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n      isDragging: false,\r\n      dragOffset: 0,\r\n      startPosition: { x: 0, y: 0 },\r\n      currentPosition: { x: 0, y: 0 },\r\n      isTransitioning: false,\r\n      autoPlayTimer: null\r\n    }\r\n  },\r\n  computed: {\r\n    imageList() {\r\n      return this.images.length > 0 ? this.images : [\r\n        '/static/logo.png',\r\n        '/static/logo.png',\r\n        '/static/logo.png'\r\n      ]\r\n    },\r\n    isHorizontal() {\r\n      return this.direction === 'horizontal'\r\n    },\r\n    containerStyle() {\r\n      return {\r\n        width: this.formatSize(this.width),\r\n        height: this.formatSize(this.height),\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n      }\r\n    },\r\n    wrapperStyle() {\r\n      return {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n      }\r\n    },\r\n    trackStyle() {\r\n      const movePercent = 100 / this.imageList.length\r\n      const translateValue = -(this.currentIndex * movePercent) + (this.dragOffset * movePercent / 100)\r\n      const transform = this.isHorizontal \r\n        ? `translateX(${translateValue}%)`\r\n        : `translateY(${translateValue}%)`\r\n      \r\n      return {\r\n        display: 'flex',\r\n        flexDirection: this.isHorizontal ? 'row' : 'column',\r\n        transform,\r\n        transition: this.isDragging || this.isTransitioning \r\n          ? (this.isDragging ? 'none' : `transform ${this.duration}ms ease-in-out`)\r\n          : 'none',\r\n        width: this.isHorizontal ? `${this.imageList.length * 100}%` : '100%',\r\n        height: this.isHorizontal ? '100%' : `${this.imageList.length * 100}%`\r\n      }\r\n    },\r\n    itemStyle() {\r\n      return {\r\n        width: this.isHorizontal ? `${100 / this.imageList.length}%` : '100%',\r\n        height: this.isHorizontal ? '100%' : `${100 / this.imageList.length}%`,\r\n        flexShrink: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.autoPlay && this.imageList.length > 1) {\r\n        this.startAutoPlay()\r\n      }\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    this.stopAutoPlay()\r\n  },\r\n  methods: {\r\n    formatSize(size) {\r\n      if (typeof size === 'number') {\r\n        return `${size}rpx`\r\n      }\r\n      return size\r\n    },\r\n    \r\n    calculateTranslate() {\r\n      // 这个方法现在不再需要，直接在 trackStyle 中计算\r\n      return -(this.currentIndex * 100) + this.dragOffset\r\n    },\r\n    \r\n    startAutoPlay() {\r\n      this.stopAutoPlay()\r\n      if (this.autoPlay && this.imageList.length > 1) {\r\n        this.autoPlayTimer = setInterval(() => {\r\n          this.next()\r\n        }, this.interval)\r\n      }\r\n    },\r\n    \r\n    stopAutoPlay() {\r\n      if (this.autoPlayTimer) {\r\n        clearInterval(this.autoPlayTimer)\r\n        this.autoPlayTimer = null\r\n      }\r\n    },\r\n    \r\n    next() {\r\n      if (this.isTransitioning) return\r\n      \r\n      if (this.currentIndex >= this.imageList.length - 1) {\r\n        if (this.loop) {\r\n          this.goToSlide(0)\r\n        }\r\n      } else {\r\n        this.goToSlide(this.currentIndex + 1)\r\n      }\r\n    },\r\n    \r\n    prev() {\r\n      if (this.isTransitioning) return\r\n      \r\n      if (this.currentIndex <= 0) {\r\n        if (this.loop) {\r\n          this.goToSlide(this.imageList.length - 1)\r\n        }\r\n      } else {\r\n        this.goToSlide(this.currentIndex - 1)\r\n      }\r\n    },\r\n    \r\n    goToSlide(index) {\r\n      if (this.isTransitioning || index === this.currentIndex) return\r\n      \r\n      this.isTransitioning = true\r\n      this.currentIndex = index\r\n      \r\n      setTimeout(() => {\r\n        this.isTransitioning = false\r\n      }, this.duration)\r\n      \r\n      this.$emit('change', {\r\n        current: index,\r\n        item: this.imageList[index]\r\n      })\r\n    },\r\n    handleTouchStart(e) {\r\n      if (!this.draggable) return\r\n      \r\n      this.stopAutoPlay()\r\n      this.isDragging = true\r\n      this.dragOffset = 0\r\n      \r\n      const touch = e.touches[0]\r\n      this.startPosition = { x: touch.clientX, y: touch.clientY }\r\n      this.currentPosition = { x: touch.clientX, y: touch.clientY }\r\n    },\r\n    \r\n    handleTouchMove(e) {\r\n      if (!this.draggable || !this.isDragging) return\r\n      \r\n      const touch = e.touches[0]\r\n      this.currentPosition = { x: touch.clientX, y: touch.clientY }\r\n      \r\n      const deltaX = this.currentPosition.x - this.startPosition.x\r\n      const deltaY = this.currentPosition.y - this.startPosition.y\r\n      \r\n      if (this.isHorizontal) {\r\n        this.dragOffset = (deltaX / uni.getSystemInfoSync().windowWidth) * 100\r\n      } else {\r\n        this.dragOffset = (deltaY / uni.getSystemInfoSync().windowHeight) * 100\r\n      }\r\n      \r\n      e.preventDefault()\r\n    },\r\n    \r\n    handleTouchEnd(e) {\r\n      if (!this.draggable || !this.isDragging) return\r\n      \r\n      this.isDragging = false\r\n      \r\n      const deltaX = this.currentPosition.x - this.startPosition.x\r\n      const deltaY = this.currentPosition.y - this.startPosition.y\r\n      const threshold = 50 // 滑动阈值\r\n      \r\n      if (this.isHorizontal) {\r\n        if (Math.abs(deltaX) > threshold) {\r\n          if (deltaX > 0) {\r\n            this.prev() // 向右滑，显示上一张\r\n          } else {\r\n            this.next() // 向左滑，显示下一张\r\n          }\r\n        }\r\n      } else {\r\n        if (Math.abs(deltaY) > threshold) {\r\n          if (deltaY > 0) {\r\n            this.prev() // 向下滑，显示上一张\r\n          } else {\r\n            this.next() // 向上滑，显示下一张\r\n          }\r\n        }\r\n      }\r\n      \r\n      this.dragOffset = 0\r\n      \r\n      // 重新开始自动播放\r\n      if (this.autoPlay) {\r\n        this.startAutoPlay()\r\n      }\r\n    },\r\n    \r\n    onItemClick(item, index) {\r\n      this.$emit('click', {\r\n        item,\r\n        index\r\n      })\r\n    },\r\n    \r\n    onImageError() {\r\n      console.warn('ScrollBanner: 图片加载失败')\r\n    },\r\n    // 归一化偏移量\r\n    normalizeOffset(val) {\r\n      if (val === null || val === undefined) return '0'\r\n      if (typeof val === 'number') return `${val}rpx`\r\n      const s = String(val).trim()\r\n      return s.length ? s : '0'\r\n    },\r\n    imageBgStyle(item) {\r\n      const src = (item && item.src) ? item.src : item\r\n      // 计算背景位置\r\n      const align = this.imageAlign\r\n      const base = align === 'top' ? '0%' : (align === 'bottom' ? '100%' : '50%')\r\n      const offset = this.normalizeOffset(this.imageOffsetY)\r\n      // 当偏移为 0 时，不使用 calc，提升兼容性\r\n      const isZero = offset === '0' || offset === '0rpx' || offset === '0px' || offset === '0%'\r\n      const backgroundPosition = isZero\r\n        ? `center ${base}`\r\n        : `center calc(${base} - ${offset})`\r\n      return {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundImage: `url(${src})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition,\r\n        backgroundRepeat: 'no-repeat'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scroll-banner-container {\r\n  position: relative;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8rpx;\r\n}\r\n\r\n.scroll-banner-wrapper {\r\n  overflow: hidden;\r\n  border-radius: 8rpx;\r\n}\r\n\r\n.scroll-banner-track {\r\n  will-change: transform;\r\n}\r\n\r\n.scroll-banner-item {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-banner-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8rpx;\r\n  background-color: #f0f0f0;\r\n  background-size: cover;             /* 等效于 aspectFill */\r\n  background-position: top center;    /* 顶部对齐 */\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.scroll-banner-indicators {\r\n  position: absolute;\r\n  bottom: 16rpx;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 12rpx;\r\n  z-index: 10;\r\n}\r\n\r\n.indicator-dot {\r\n  width: 12rpx;\r\n  height: 12rpx;\r\n  border-radius: 50%;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.indicator-dot.active {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  transform: scale(1.2);\r\n}\r\n</style>\r\n","import Component from 'D:/workspace/ClientWorkArea/证照小程序/miniapp/zfb-uniapp/components/scroll-banner.vue'\nmy.createComponent(Component)"],"names":["uni"],"mappings":"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"}